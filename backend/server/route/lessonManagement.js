const express = require('express');
let router = express.Router();

const lessonCreation = require('../bll/lessonManagement/lessonCreation');
const lessonSearch = require('../bll/lessonManagement/lessonSearch');
const lessonSelect = require('../bll/lessonManagement/lessonSelection');

/**
 * @swagger
 * /lesson/create:
 *  post:
 *    tags:
 *      - Lesson Management
 *    summary: Add a new lesson to the database
 *    description: Add a new lesson to the database and add it to the subjects document too
 *    consumes:
 *      - application/json
 *    produces:
 *      - application/json
 *    parameters:
 *      - in: body
 *        name: lesson
 *        description: Document format
 *        schema:
 *          $ref: '#/definitions/Lesson'
 *    responses:
 *      201:
 *        description: Lesson created
 *      409:
 *        description: Lesson already exists
 *      500:
 *        description: Database or server error
 */ 
router.post('/lesson/create', lessonCreation.lessonCreation);

/**
 * @swagger
 * /lesson/search:
 *  get:
 *    tags:
 *      - Lesson Management
 *    summary: Search for a lesson based on its ID
 *    description: Attendy lesson search
 *    consumes:
 *      - application/json
 *    produces:
 *      - application/json
 *    parameters:
 *      - in: query
 *        name: _id
 *        schema:
 *          type: string
 *          example: 5e50214a16e61201e8f6812a
 *        description: lesson ID that was generated by MongoDB
 *    responses:
 *      200:
 *        description: Returns found lessons 
 *      409:
 *        description: Lesson does not exist
 *      500:
 *        description: Database or server error
 */ 
router.get('/lesson/search', lessonSearch.lessonSearch);

/**
 * @swagger
 * /lesson/select:
 *    post:
 *      tags:
 *          - Lesson Management
 *      summary: User adds lesson
 *      description: Select lesson and add it to the attendance database 
 *      parameters:
 *      - in: body
 *        name: attendance
 *        description: Document format
 *        schema:
 *          $ref: '#/definitions/Attendance'
 *      responses:
 *        201:
 *          description: Successfully added lesson
 *        204:
 *          description: Conditions not fulfilled
 *        500:
 *          description: Database or server error
 * 
 */
router.post('/lesson/select', lessonSelect.lessonSelect);

module.exports = router;